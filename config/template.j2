/**
 * @file
 * Defines default strategy parameter values for the given timeframe.
 */

// Defines indicator's parameter values for the given pair symbol and timeframe.
struct Indi_BWMFI_Params_{{ Timeframe }} : Indi_BWMFI_Params {
  Indi_BWMFI_Params_{{ Timeframe }}() : Indi_BWMFI_Params(indi_bwmfi_defaults, PERIOD_{{ Timeframe }}) {
    applied_price = (ENUM_APPLIED_PRICE){{ BWMFI_Indi_BWMFI_Applied_Price | default(0) }};
    ma_method = {{ BWMFI_Indi_BWMFI_MA_Method | default(0) }};
    period = {{ BWMFI_Indi_BWMFI_Period | default(0) }};
    shift = {{ BWMFI_Shift | default(0) }};
  }
} indi_bwmfi_{{ Timeframe | lower }};

// Defines strategy's parameter values for the given pair symbol and timeframe.
struct Stg_BWMFI_Params_{{ Timeframe }} : StgParams {
  // Struct constructor.
  Stg_BWMFI_Params_{{ Timeframe }}() : StgParams(stg_bwmfi_defaults) {
    lot_size = {{ BWMFI_LotSize | default(0) }};
    signal_open_method = {{ BWMFI_SignalOpenMethod | default(0) }};
    signal_open_filter = {{ BWMFI_SignalOpenFilterMethod | default(1) }};
    signal_open_level = {{ BWMFI_SignalOpenLevel | default(0) }};
    signal_open_boost = {{ BWMFI_SignalOpenBoostMethod | default(0) }};
    signal_close_method = {{ BWMFI_SignalCloseMethod | default(0) }};
    signal_close_level = {{ BWMFI_SignalCloseLevel | default(0) }};
    price_stop_method = {{ BWMFI_PriceStopMethod | default(0) }};
    price_stop_level = {{ BWMFI_SignalCloseLevel | default(1) }};
    tick_filter_method = {{ BWMFI_TickFilterMethod  | default(1) }};
    max_spread = {{ BWMFI_MaxSpread | default(0) }};
  }
} stg_bwmfi_{{ Timeframe | lower }};
